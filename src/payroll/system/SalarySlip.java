/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package payroll.system;

import com.itextpdf.text.*;
import java.util.Objects;
import java.time.Year;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.draw.LineSeparator;
import java.awt.Font;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.*;
import java.awt.*;
import javax.swing.* ;
import com.itextpdf.text.pdf.*;
import java.io.FileNotFoundException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Acer
 */
public class SalarySlip extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst = null;
    String username;
    
    Calendar cal = new GregorianCalendar();
    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
    String date = sdf.format(cal.getTime());


    int second = cal.get(Calendar.SECOND);
    int minute = cal.get(Calendar.MINUTE);
    int hour = cal.get(Calendar.HOUR);
    DecimalFormat df = new DecimalFormat("00");
    String time = df.format(hour) + ":" + df.format(minute) + ":" + df.format(second);

    String type = "Salary Slip";

    /**
     * Creates new form SalarySlip
     */
     public SalarySlip() {
        initComponents();
        
        conn = db.java_db();
    }
    public SalarySlip(String name) {
        this.username = name;
        
        initComponents();
        
        conn = db.java_db();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        main_panel = new javax.swing.JPanel();
        slip_panel = new javax.swing.JPanel();
        salary_overview = new javax.swing.JLabel();
        employee_id_label = new javax.swing.JLabel();
        name_label = new javax.swing.JLabel();
        eis_label = new javax.swing.JLabel();
        epf_label = new javax.swing.JLabel();
        ic_label = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        allowance_label = new javax.swing.JLabel();
        net_label = new javax.swing.JLabel();
        generate_button = new javax.swing.JButton();
        gross_label = new javax.swing.JLabel();
        deduction_label = new javax.swing.JLabel();
        sosco_label = new javax.swing.JLabel();
        basic_label = new javax.swing.JLabel();
        salary_id_label = new javax.swing.JLabel();
        position_label = new javax.swing.JLabel();
        lhdn_label = new javax.swing.JLabel();
        txt_position = new javax.swing.JLabel();
        txt_id = new javax.swing.JLabel();
        txt_name = new javax.swing.JLabel();
        txt_ic = new javax.swing.JLabel();
        txt_lhdn = new javax.swing.JLabel();
        txt_eis = new javax.swing.JLabel();
        txt_epf = new javax.swing.JLabel();
        txt_sosco = new javax.swing.JLabel();
        txt_salary = new javax.swing.JLabel();
        txt_basic = new javax.swing.JLabel();
        txt_allowance = new javax.swing.JLabel();
        txt_deduction = new javax.swing.JLabel();
        txt_net = new javax.swing.JLabel();
        txt_gross = new javax.swing.JLabel();
        delete_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 600), new java.awt.Dimension(0, 600), new java.awt.Dimension(32767, 600));
        txt_month = new javax.swing.JComboBox<>();
        slip_label = new javax.swing.JLabel();
        logout_button = new javax.swing.JButton();
        back = new javax.swing.JLabel();
        side_menu = new javax.swing.JPanel();
        dashboard_button1 = new javax.swing.JButton();
        employee_button = new javax.swing.JButton();
        calculation_button = new javax.swing.JButton();
        slip_button = new javax.swing.JButton();
        system_label = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        payroll_label1 = new javax.swing.JLabel();
        hr_label = new javax.swing.JLabel();
        audit_button = new javax.swing.JButton();

        jLabel16.setText("1");

        jLabel17.setText("1");

        jLabel18.setText("1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        main_panel.setBackground(new java.awt.Color(255, 255, 255));
        main_panel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                main_panelComponentResized(evt);
            }
        });

        slip_panel.setBackground(new java.awt.Color(239, 242, 242));

        salary_overview.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        salary_overview.setText("Salary Overview ");

        employee_id_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        employee_id_label.setText("Employee Id  :");

        name_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        name_label.setText("Name  :");

        eis_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        eis_label.setText("Eis No  :");

        epf_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        epf_label.setText("Epf No  :");

        ic_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        ic_label.setText("IC No:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel8.setText("Employee Details");

        jLabel9.setText(" ");

        allowance_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        allowance_label.setText("Allowances  :");

        net_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        net_label.setText("Net Pay  :");

        generate_button.setBackground(new java.awt.Color(250, 255, 255));
        generate_button.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        generate_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/system/images/pdf_icon.png"))); // NOI18N
        generate_button.setText("Generate Pdf Slip");
        generate_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate_buttonActionPerformed(evt);
            }
        });

        gross_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        gross_label.setText("Gross Pay  :");

        deduction_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        deduction_label.setText("Deduction  :");

        sosco_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        sosco_label.setText("Sosco No  :");

        basic_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        basic_label.setText("Basic Salary  :");

        salary_id_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        salary_id_label.setText("Salary Id  :");

        position_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        position_label.setText("Position  :");

        lhdn_label.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        lhdn_label.setText("LHDN No  :");

        delete_button.setBackground(new java.awt.Color(250, 255, 255));
        delete_button.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        delete_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/system/images/delete_icon.png"))); // NOI18N
        delete_button.setText("Delete");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout slip_panelLayout = new javax.swing.GroupLayout(slip_panel);
        slip_panel.setLayout(slip_panelLayout);
        slip_panelLayout.setHorizontalGroup(
            slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(slip_panelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(slip_panelLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(slip_panelLayout.createSequentialGroup()
                        .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(slip_panelLayout.createSequentialGroup()
                                    .addGap(327, 327, 327)
                                    .addComponent(jLabel9))
                                .addGroup(slip_panelLayout.createSequentialGroup()
                                    .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(position_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, slip_panelLayout.createSequentialGroup()
                                            .addGap(22, 22, 22)
                                            .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(ic_label, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                .addComponent(name_label, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                .addComponent(employee_id_label, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))))
                                    .addGap(10, 10, 10)
                                    .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_ic, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_position, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, slip_panelLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(allowance_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(salary_id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(basic_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_allowance, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_basic, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(slip_panelLayout.createSequentialGroup()
                                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eis_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(epf_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sosco_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lhdn_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_sosco, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_eis, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_epf, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_lhdn, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(slip_panelLayout.createSequentialGroup()
                                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gross_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(net_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deduction_label, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_net, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_gross, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_deduction, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(100, 100, 100))
                    .addGroup(slip_panelLayout.createSequentialGroup()
                        .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(salary_overview, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(slip_panelLayout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(generate_button, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        slip_panelLayout.setVerticalGroup(
            slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(slip_panelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(slip_panelLayout.createSequentialGroup()
                        .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(employee_id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ic_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_ic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(position_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_position, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salary_overview))
                    .addGroup(slip_panelLayout.createSequentialGroup()
                        .addComponent(eis_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(epf_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(sosco_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lhdn_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_lhdn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(slip_panelLayout.createSequentialGroup()
                        .addComponent(txt_eis, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txt_epf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txt_sosco, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(slip_panelLayout.createSequentialGroup()
                            .addComponent(gross_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(deduction_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(net_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(slip_panelLayout.createSequentialGroup()
                            .addComponent(txt_gross, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(txt_deduction, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(txt_net, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(slip_panelLayout.createSequentialGroup()
                        .addComponent(salary_id_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(basic_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(allowance_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(slip_panelLayout.createSequentialGroup()
                        .addComponent(txt_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txt_basic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txt_allowance, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(slip_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(generate_button, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(delete_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Search Employee Id");

        txt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFocusGained(evt);
            }
        });
        txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActionPerformed(evt);
            }
        });
        txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel14.setText("Month");

        txt_month.setBackground(new java.awt.Color(250, 255, 255));
        txt_month.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txt_month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select Month--", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", " " }));
        txt_month.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txt_monthItemStateChanged(evt);
            }
        });
        txt_month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_monthActionPerformed(evt);
            }
        });

        slip_label.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        slip_label.setText("Salary Slip");

        logout_button.setBackground(new java.awt.Color(250, 255, 255));
        logout_button.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        logout_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/system/images/logout_icon.png"))); // NOI18N
        logout_button.setText("Logout");
        logout_button.setIconTextGap(12);
        logout_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_buttonActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Californian FB", 1, 36)); // NOI18N
        back.setText("<");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout main_panelLayout = new javax.swing.GroupLayout(main_panel);
        main_panel.setLayout(main_panelLayout);
        main_panelLayout.setHorizontalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panelLayout.createSequentialGroup()
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(slip_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(76, Short.MAX_VALUE))
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(slip_label)
                                .addGap(185, 185, 185)))
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(logout_button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20))
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        main_panelLayout.setVerticalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panelLayout.createSequentialGroup()
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logout_button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(slip_label)
                                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(txt_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slip_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(49, 49, 49))
        );

        side_menu.setBackground(new java.awt.Color(0, 33, 120));
        side_menu.setPreferredSize(new java.awt.Dimension(226, 550));

        dashboard_button1.setBackground(new java.awt.Color(0, 30, 120));
        dashboard_button1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        dashboard_button1.setForeground(new java.awt.Color(255, 255, 255));
        dashboard_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/system/images/dashboard_icon.png"))); // NOI18N
        dashboard_button1.setText("Dashboard");
        dashboard_button1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dashboard_button1.setIconTextGap(40);
        dashboard_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboard_button1ActionPerformed(evt);
            }
        });

        employee_button.setBackground(new java.awt.Color(0, 30, 120));
        employee_button.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        employee_button.setForeground(new java.awt.Color(255, 255, 255));
        employee_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/system/images/empmanagement_icon.png"))); // NOI18N
        employee_button.setText(" Employee Management");
        employee_button.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        employee_button.setIconTextGap(5);
        employee_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employee_buttonActionPerformed(evt);
            }
        });

        calculation_button.setBackground(new java.awt.Color(0, 30, 120));
        calculation_button.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        calculation_button.setForeground(new java.awt.Color(255, 255, 255));
        calculation_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/system/images/calculation_icon.png"))); // NOI18N
        calculation_button.setText("Salary Calculation");
        calculation_button.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        calculation_button.setIconTextGap(23);
        calculation_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculation_buttonActionPerformed(evt);
            }
        });

        slip_button.setBackground(new java.awt.Color(250, 255, 255));
        slip_button.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        slip_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/system/images/slip_icon.png"))); // NOI18N
        slip_button.setText("Salary Slip");
        slip_button.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        slip_button.setIconTextGap(38);
        slip_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slip_buttonActionPerformed(evt);
            }
        });

        system_label.setFont(new java.awt.Font("Californian FB", 0, 32)); // NOI18N
        system_label.setForeground(new java.awt.Color(255, 255, 255));
        system_label.setText("System");

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/system/images/logo1.png"))); // NOI18N
        logo.setPreferredSize(new java.awt.Dimension(100, 130));

        payroll_label1.setFont(new java.awt.Font("Californian FB", 0, 32)); // NOI18N
        payroll_label1.setForeground(new java.awt.Color(255, 255, 255));
        payroll_label1.setText("Payroll");

        hr_label.setFont(new java.awt.Font("Californian FB", 0, 32)); // NOI18N
        hr_label.setForeground(new java.awt.Color(255, 255, 255));
        hr_label.setText("HR &");

        audit_button.setBackground(new java.awt.Color(0, 30, 120));
        audit_button.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        audit_button.setForeground(new java.awt.Color(255, 255, 255));
        audit_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/system/images/history_icon.png"))); // NOI18N
        audit_button.setText("Audit Trail");
        audit_button.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        audit_button.setIconTextGap(50);
        audit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                audit_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout side_menuLayout = new javax.swing.GroupLayout(side_menu);
        side_menu.setLayout(side_menuLayout);
        side_menuLayout.setHorizontalGroup(
            side_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(side_menuLayout.createSequentialGroup()
                .addGroup(side_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(side_menuLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(side_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(slip_button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(calculation_button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dashboard_button1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(employee_button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(audit_button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(side_menuLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(side_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(hr_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(payroll_label1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(system_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        side_menuLayout.setVerticalGroup(
            side_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(side_menuLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(side_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, side_menuLayout.createSequentialGroup()
                        .addComponent(hr_label)
                        .addGap(1, 1, 1)
                        .addComponent(payroll_label1)
                        .addGap(1, 1, 1)
                        .addComponent(system_label))
                    .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(dashboard_button1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(employee_button, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(calculation_button, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(slip_button, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(audit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(side_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(main_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(side_menu, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1200, 680));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private String currentEmployeeID ,name,position,eis_id,epf_id,sosco_id,salary_id,gross_pay,
                   net_pay,total_deduction,ot_hour,rate_per_hour,pcb,other_deduction,month ,ic,lhdn_id;
    
    private double basic_salary ,salary_allowance ,ot_pay,commission ,epf_emp,eis_emp,sosco_emp , eis, sosco , epf;
    private void txtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeyReleased
        try {
        // Query for Employee data
        String employeeQuery = "SELECT * FROM Employee WHERE employee_id = ?";
        pst = conn.prepareStatement(employeeQuery);
        pst.setString(1, txt.getText());
        rs = pst.executeQuery();

        // Retrieve data from the Employee table
        if (rs.next()) {
            currentEmployeeID = rs.getString("employee_id");
            txt_id.setText(currentEmployeeID);

            name = rs.getString("employee_name");
            txt_name.setText(name);

            position = rs.getString("employee_position");
            txt_position.setText(position);
            
            eis_id = rs.getString("employee_eis_id");
            txt_eis.setText(eis_id);
            
            epf_id = rs.getString("employee_epf_id");
            txt_epf.setText(epf_id);
            
            sosco_id = rs.getString("employee_sosco_id");
            txt_sosco.setText(sosco_id);
            
             ic = rs.getString("employee_ic");
             txt_ic.setText(ic) ;
             
            lhdn_id = rs.getString("employee_lhdn_id");
            txt_lhdn.setText(lhdn_id);
            
            basic_salary = rs.getDouble("employee_basic_salary");
           
            
            
        } else {
            // Handle the case where no data is found for the given employee ID
            // Clear fields or show an error message
            currentEmployeeID = null;
            txt_id.setText("");
            txt_name.setText("");
            txt_ic.setText("");
            txt_position.setText(" ");
            txt_eis.setText(" ");
            txt_sosco.setText(" ");
            txt_lhdn.setText(" ");
            txt_epf.setText(" ");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error retrieving data");
    } finally {
        try {
            rs.close();
            pst.close();
        } catch (SQLException e) {
            // Handle closing resources
        }
    }
    }//GEN-LAST:event_txtKeyReleased

    private void txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtActionPerformed
                txt_basic.setText("");
                txt_salary.setText("");
                txt_allowance.setText("");
                txt_gross.setText("");
                txt_net.setText("");
                txt_deduction.setText("");
                txt_month.setSelectedIndex(0);
    }//GEN-LAST:event_txtActionPerformed

    private void txt_monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_monthActionPerformed
         if (currentEmployeeID != null) {
        try {
            String salaryQuery = "SELECT * FROM Salary WHERE salary_month = ? AND emp_id = ?";
            pst = conn.prepareStatement(salaryQuery);
            pst.setString(1, Objects.requireNonNull(txt_month.getSelectedItem()).toString());
            pst.setString(2, currentEmployeeID);
            rs = pst.executeQuery();

            if (rs.next()) {
                
                txt_basic.setText(formatToTwoDecimalPlacesDouble(basic_salary));
                
                salary_id = rs.getString("salary_id");
                txt_salary.setText(salary_id);
                
                salary_allowance = rs.getDouble("salary_allowance");
                txt_allowance.setText(String.format("%.2f", salary_allowance));
                
                gross_pay = rs.getString("salary_gross_pay");
                txt_gross.setText(formatToTwoDecimalPlaces(gross_pay));
                
                net_pay = rs.getString("salary_net_pay");
                txt_net.setText(formatToTwoDecimalPlaces(net_pay));
                
                total_deduction = rs.getString("salary_total_deduction");
                txt_deduction.setText(formatToTwoDecimalPlaces(total_deduction));
                
                ot_hour = rs.getString("salary_ot_hour");
                rate_per_hour = rs.getString("salary_rate_per_hour");
                ot_pay= rs.getDouble("salary_ot_pay");
                epf_emp = rs.getDouble("salary_epf_emp");
                eis_emp = rs.getDouble("salary_eis_emp");
                sosco_emp = rs.getDouble("salary_sosco_emp");
                pcb = rs.getString("salary_pcb");
                other_deduction = rs.getString("salary_other_deduction");
                month = rs.getString("salary_month");
                commission = rs.getDouble("salary_commission");
            } else {
                txt_salary.setText("");
                 if (txt_month.getSelectedIndex() != 0) {
                     JOptionPane.showMessageDialog(null, "No salary data found for the selected month and employee ID");
                   }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error retrieving salary data: " + e.getMessage());
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (SQLException e) {
                // Handle closing resources
            }
        }
    } else {
        // Handle the case where no employee ID is selected
        // Clear fields or show an error message
        txt_salary.setText("");
        JOptionPane.showMessageDialog(null, "Please select an valid employee ID ");
    }
    }//GEN-LAST:event_txt_monthActionPerformed

    private void main_panelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_main_panelComponentResized
       setLargerComponentSizes();
    }//GEN-LAST:event_main_panelComponentResized

    private void txt_monthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_monthKeyReleased

    }//GEN-LAST:event_txt_monthKeyReleased

    private void txt_monthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txt_monthItemStateChanged
         txt_salary.setText("");
         txt_basic.setText("");
         txt_deduction.setText("");
         txt_gross.setText("");
         txt_allowance.setText("");
         txt_net.setText("");
         
    }//GEN-LAST:event_txt_monthItemStateChanged

    private void dashboard_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboard_button1ActionPerformed
        // TODO add your handling code here:
        Homepage h = new Homepage();
        h.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_dashboard_button1ActionPerformed

    private void employee_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employee_buttonActionPerformed
        // TODO add your handling code here:
        EmployeeManagement e = new EmployeeManagement(username);
        e.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_employee_buttonActionPerformed

    private void calculation_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculation_buttonActionPerformed
        SalaryCalculation c = new SalaryCalculation(username);
        c.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_calculation_buttonActionPerformed

    private void slip_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slip_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_slip_buttonActionPerformed

    private void logout_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_buttonActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showOptionDialog(
            this,
            "Are you sure you want to logout?",
            "Confirm Logout",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            new Object[]{"Logout", "Cancel"},
            "Logout"
        );

        if (option == JOptionPane.YES_OPTION) {
            Login x = new Login();
            x.setVisible(true);
            this.dispose();
            
            String action = "Logout as " + username;
            String auditSQL = "INSERT INTO Audit (audit_date, audit_time, audit_type, audit_action) VALUES (?,?,?,?)";
            try {
                pst = conn.prepareStatement(auditSQL);
                pst.setString(1, date);
                pst.setString(2, time);
                pst.setString(3, "Login & Logout");
                pst.setString(4, action);
                pst.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(Homepage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_logout_buttonActionPerformed

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        Homepage h = new Homepage();
        h.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void generate_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate_buttonActionPerformed

        calculateSatuotory();

        if (isValidData()) {
            JFileChooser dialog = new JFileChooser ();
            dialog.setSelectedFile(new File (name + "-Salary Slip" + ".pdf"));
            int dialogResult = dialog.showSaveDialog(null);
            if (dialogResult == JFileChooser.APPROVE_OPTION){
                String filePath = dialog.getSelectedFile().getPath();

                try {
                    Document myDocument = new Document ();
                    PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                    myDocument.setMargins(36, 36, 36, 36);
                    myDocument.open();

                    Paragraph paySlipParagraph = new Paragraph("Quantum Innovations Solutions Pte Ltd", FontFactory.getFont(FontFactory.TIMES_BOLD, 18, Font.BOLD));
                    paySlipParagraph.setAlignment(Element.ALIGN_CENTER);
                    Paragraph paySlipParagraph2 = new Paragraph("123 Tech Boulevard, Cyber City, Digital District, ", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12));
                    paySlipParagraph2.setAlignment(Element.ALIGN_CENTER);
                    Paragraph paySlipParagraph3 = new Paragraph("54321 , Kuala Lumpur , Malaysia. ", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12));
                    paySlipParagraph3.setAlignment(Element.ALIGN_CENTER);
                    Paragraph paySlipParagraph4 = new Paragraph(String.format("Pay Slip For %s %d", month, Year.now().getValue()), FontFactory.getFont(FontFactory.TIMES_ROMAN, 18, Font.BOLD));
                    paySlipParagraph4.setAlignment(Element.ALIGN_CENTER);

                    PdfPTable table = new PdfPTable(5);

                    // Set the width of the table columns (you can adjust as needed)
                    float[] columnWidths = {40f, 80f ,15f,30f,50f};
                    table.setWidths(columnWidths);
                    table.getDefaultCell().setBorderColor(BaseColor.WHITE);

                    table.addCell("Employee Id");
                    table.addCell(": " + currentEmployeeID);
                    table.addCell("");
                    table.addCell("Epf No");
                    table.addCell(": " + epf_id);

                    table.addCell("Name");
                    table.addCell(": " +name);
                    table.addCell("");
                    table.addCell("Sosco No");
                    table.addCell(": " + sosco_id);

                    table.addCell("IC No");
                    table.addCell(": " + ic);
                    table.addCell("");
                    table.addCell("Eis No");
                    table.addCell(": " + eis_id);

                    table.addCell("Position");
                    table.addCell(": " + position);
                    table.addCell("");
                    table.addCell("LHDN No");
                    table.addCell(": " + lhdn_id);

                    PdfPTable table1 = new PdfPTable(4);
                    float[] columnWidths1 = {50f, 40f , 50f , 20f};
                    table1.setWidths(columnWidths1);
                    table1.getDefaultCell().setBorderColor(BaseColor.WHITE);
                    table1.addCell("Earnings");
                    table1.addCell("");
                    table1.addCell("Deduction");
                    table1.addCell("");

                    PdfPTable table2 = new PdfPTable(5);
                    float[] columnWidths2 = {40f, 30f , 20f, 40f , 30f};
                    table2.setWidths(columnWidths2);
                    table2.getDefaultCell().setBorderColor(BaseColor.WHITE);

                    table2.addCell("Basic Salary");
                    table2.addCell(createRightAlignedCell(formatToTwoDecimalPlacesDouble(basic_salary)));
                    table2.addCell("");
                    table2.addCell("Epf Employee");
                    table2.addCell(createRightAlignedCell(formatToTwoDecimalPlacesDouble(epf_emp)));

                    table2.addCell("Allowance");
                    table2.addCell(createRightAlignedCell((formatToTwoDecimalPlacesDouble(salary_allowance))));
                    table2.addCell("");
                    table2.addCell("Socso Employee");
                    table2.addCell(createRightAlignedCell(formatToTwoDecimalPlacesDouble(sosco_emp)));

                    table2.addCell("Overtime");
                    table2.addCell("");
                    table2.addCell("");
                    table2.addCell("Eis Employee");
                    table2.addCell(createRightAlignedCell(formatToTwoDecimalPlacesDouble(eis_emp)));

                    table2.addCell( "       " + ot_hour + "hrs x " + rate_per_hour);
                    table2.addCell(createRightAlignedCell(formatToTwoDecimalPlacesDouble(ot_pay)));
                    table2.addCell("");
                    table2.addCell("Income Tax PCB");
                    table2.addCell(createRightAlignedCell(formatToTwoDecimalPlaces(pcb)));

                    table2.addCell("Commissions ");
                    table2.addCell(createRightAlignedCell(formatToTwoDecimalPlacesDouble(commission)));
                    table2.addCell("");
                    table2.addCell("Others");
                    table2.addCell(createRightAlignedCell(formatToTwoDecimalPlaces(other_deduction)));

                    PdfPTable table3 = new PdfPTable(5);
                    table3.setWidths(columnWidths2);
                    table3.getDefaultCell().setBorderColor(BaseColor.WHITE);

                    table3.addCell("Gross Total");
                    table3.addCell(createRightAlignedCell(formatToTwoDecimalPlaces(gross_pay)));
                    table3.addCell("");
                    table3.addCell("Total Deduction");
                    table3.addCell(createRightAlignedCell(formatToTwoDecimalPlaces(total_deduction)));

                    PdfPTable table4 = new PdfPTable(5);
                    table4.setWidths(columnWidths2);
                    table4.getDefaultCell().setBorderColor(BaseColor.WHITE);

                    table4.addCell("");
                    table4.addCell("");
                    table4.addCell("");
                    PdfPCell cell = new PdfPCell(new Phrase("       Net Pay", FontFactory.getFont(FontFactory.TIMES_BOLD, 14)));
                    cell.setBorder(Rectangle.NO_BORDER);
                    table4.addCell(cell);
                    cell = new PdfPCell(new Phrase("RM " + formatToTwoDecimalPlaces(net_pay), FontFactory.getFont(FontFactory.TIMES_BOLD, 14)));
                    cell.setBorder(Rectangle.NO_BORDER);
                    cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    table4.addCell(cell);

                    PdfPTable table5 = new PdfPTable(5);

                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlaces(" ")));
                    table5.addCell(createMiddleAlignedCell(("PCB")));
                    table5.addCell(createMiddleAlignedCell(("EPF")));
                    table5.addCell(createMiddleAlignedCell(("SOSCO")));
                    table5.addCell(createMiddleAlignedCell(("EIS")));

                    table5.addCell(createMiddleAlignedCell(("Employer ")));
                    table5.addCell(createMiddleAlignedCell(("-")));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlacesDouble(epf)));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlacesDouble(sosco)));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlacesDouble(eis)));

                    table5.addCell(createMiddleAlignedCell(("Employee")));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlaces(pcb)));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlacesDouble(epf_emp)));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlacesDouble(sosco_emp)));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlacesDouble(eis_emp)));

                    table5.addCell(createMiddleAlignedCell(("Total")));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlaces(pcb)));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlacesDouble(epf_emp + epf)));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlacesDouble(sosco_emp + sosco)));
                    table5.addCell(createMiddleAlignedCell(formatToTwoDecimalPlacesDouble(eis_emp + eis)));

                    myDocument.add(paySlipParagraph);
                    myDocument.add(paySlipParagraph2);
                    myDocument.add(paySlipParagraph3);
                    myDocument.add(new Paragraph("\n"));
                    myDocument.add(paySlipParagraph4);
                    myDocument.add(new Paragraph("\n\n"));
                    myDocument.add(table);
                    myDocument.add(new Paragraph("\n\n"));
                    myDocument.add(table1);
                    LineSeparator lineSeparator = new LineSeparator();
                    lineSeparator.setPercentage(80f);
                    myDocument.add(new Chunk(lineSeparator));
                    myDocument.add(table2);
                    myDocument.add(new Paragraph("\n"));
                    myDocument.add(new Chunk(lineSeparator));
                    myDocument.add(table3);
                    myDocument.add(new Chunk(lineSeparator));
                    myDocument.add(new Paragraph("\n "));
                    myDocument.add(new Paragraph("                 Statutory Contributions\n "));
                    myDocument.add(table5);
                    myDocument.add(new Paragraph("\n"));
                    myDocument.add(table4);
                    myDocument.add(new Paragraph("\n\n\n\n\n\n"));
                    myDocument.add(new Paragraph("          Note : This is a computer generated payslip and does not require any signature."));

                    myDocument.newPage();
                    myDocument.close ();
                    JOptionPane.showMessageDialog (null , "Report was successfully generated");

                    String employee = txt_id.getText();
                    String salary = txt_salary.getText();
                    String action = "Generate salary slip for employee id: " + employee + " salary id: " + salary;
                    String auditSQL = "INSERT INTO Audit (audit_date, audit_time, audit_type, audit_action) VALUES (?,?,?,?)";
                    pst = conn.prepareStatement(auditSQL);
                    pst.setString(1, date);
                    pst.setString(2, time);
                    pst.setString(3, type);
                    pst.setString(4, action);
                    pst.executeUpdate();
                    
                } catch(DocumentException | HeadlessException | FileNotFoundException e){
                    JOptionPane.showMessageDialog(null,e);
                } catch (SQLException ex) {
                    Logger.getLogger(SalarySlip.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select both Employee ID and Month");
        }
    }//GEN-LAST:event_generate_buttonActionPerformed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
         try {
        PreparedStatement preparedStatement = conn.prepareStatement(
            "DELETE FROM Salary WHERE emp_id = ? AND salary_month = ?");

        preparedStatement.setString(1, currentEmployeeID);
        preparedStatement.setString(2, month);

        int rowsAffected = preparedStatement.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Data deleted successfully!");
            String employee = txt_id.getText();
            String salary = txt_salary.getText();
            
            txt_salary.setText("");
            txt_basic.setText("");
            txt_deduction.setText("");
            txt_gross.setText("");
            txt_allowance.setText("");
            txt_net.setText("");
            
            String action = "Delete salary record for employee id: " + employee + " salary id: " + salary;
            String auditSQL = "INSERT INTO Audit (audit_date, audit_time, audit_type, audit_action) VALUES (?,?,?,?)";
            pst = conn.prepareStatement(auditSQL);
            pst.setString(1, date);
            pst.setString(2, time);
            pst.setString(3, type);
            pst.setString(4, action);
            pst.executeUpdate();
        } else {
            JOptionPane.showMessageDialog(null, "No data deleted. Verify the input parameters.");
        }
        
    } catch (SQLException e) {
    }
    }//GEN-LAST:event_delete_buttonActionPerformed

    private void txtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFocusGained

    private void audit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_audit_buttonActionPerformed
        // TODO add your handling code here:
        Audit a = new Audit(username);
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_audit_buttonActionPerformed

    public static String formatToTwoDecimalPlaces(String value) {

    if (value == null || value.trim().isEmpty() || "-".equals(value.trim())) {
        return "0.00";
    }

    try {
        // Attempt to parse the input string to a double
        double parsedValue = Double.parseDouble(value.trim());
        
        String formattedValue = String.format("%.2f", parsedValue);
        return formattedValue;
    }   catch (NumberFormatException e) { 
        return "0.00";
    }
}
    
private String formatToTwoDecimalPlacesDouble(double numericValue) {
    try {
        return String.format("%.2f", numericValue);
    } catch (NumberFormatException e) {
        System.err.println("Invalid double value: " + e.getMessage());
        return "N/A";
    }
}

private void setLargerComponentSizes() {
    Component[] components = main_panel.getComponents();

    for (Component component : components) {
        if (component instanceof JButton || component instanceof JTextField || component instanceof JComboBox) {
            Dimension largerSize = new Dimension(120, 30); 
            component.setPreferredSize(largerSize);
        } else if (component instanceof JLabel) {
            Dimension largerSize = new Dimension(200, 40); 
            component.setPreferredSize(largerSize);
        }
    }

    // Update layout
    main_panel.revalidate();
    main_panel.repaint();
}
    
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new SalarySlip().setVisible(true);
        });
    }
    
    private PdfPCell createRightAlignedCell(String content) {
        PdfPCell cell = new PdfPCell(new Phrase(content));
        cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell.setBorder(Rectangle.NO_BORDER); 
    return cell;
}
    
    private PdfPCell createMiddleAlignedCell(String content) {
        PdfPCell cell = new PdfPCell(new Phrase(content));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
    return cell;
}

    private boolean isValidData() {
    if (currentEmployeeID != null) {
        try {
            String salaryQuery = "SELECT * FROM Salary WHERE salary_month = ? AND emp_id = ?";
            pst = conn.prepareStatement(salaryQuery);
            pst.setString(1, Objects.requireNonNull(txt_month.getSelectedItem()).toString());
            pst.setString(2, currentEmployeeID);
            rs = pst.executeQuery();

            if (rs.next()) {
                return true;
            } else {
                return false;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error retrieving salary data: " + e.getMessage());
            return false; 
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (SQLException e) {
            }
        }
    }
    return false; 
}
    
public void calculateSatuotory() {
        double epfCriteria =  basic_salary + salary_allowance +commission;
        double soscoCriteria = epfCriteria +ot_pay;
        
        if (epfCriteria <5000 ){
             epf = epfCriteria* 0.13 ; 
        }
        
        else {
            epf = epfCriteria*0.12;
        }
         
        if (soscoCriteria <5000 ){
             sosco = soscoCriteria* 0.0175 ; 
             eis = soscoCriteria * 0.002;
        }
        
        else {
            sosco = soscoCriteria*0.0175;
            eis = soscoCriteria * 0.002;
        }
        
        try {
            String updateQuery = "UPDATE Salary " +
                    "SET salary_epf_employer = ?, salary_sosco_employer = ?, salary_eis_employer = ? " +
                    "WHERE emp_id =? AND salary_month = ?"; // Removed VALUES clause

            PreparedStatement pst = conn.prepareStatement(updateQuery);
            pst.setDouble(1, epf);
            pst.setDouble(2, sosco);
            pst.setDouble(3, eis);
            pst.setString (4, currentEmployeeID);
           pst.setString (5, month); 
            pst.executeUpdate();

        } catch (SQLException e) {
        }
}
        
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel allowance_label;
    private javax.swing.JButton audit_button;
    private javax.swing.JLabel back;
    private javax.swing.JLabel basic_label;
    private javax.swing.JButton calculation_button;
    private javax.swing.JButton dashboard_button1;
    private javax.swing.JLabel deduction_label;
    private javax.swing.JButton delete_button;
    private javax.swing.JLabel eis_label;
    private javax.swing.JButton employee_button;
    private javax.swing.JLabel employee_id_label;
    private javax.swing.JLabel epf_label;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton generate_button;
    private javax.swing.JLabel gross_label;
    private javax.swing.JLabel hr_label;
    private javax.swing.JLabel ic_label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lhdn_label;
    private javax.swing.JLabel logo;
    private javax.swing.JButton logout_button;
    private javax.swing.JPanel main_panel;
    private javax.swing.JLabel name_label;
    private javax.swing.JLabel net_label;
    private javax.swing.JLabel payroll_label1;
    private javax.swing.JLabel position_label;
    private javax.swing.JLabel salary_id_label;
    private javax.swing.JLabel salary_overview;
    private javax.swing.JPanel side_menu;
    private javax.swing.JButton slip_button;
    private javax.swing.JLabel slip_label;
    private javax.swing.JPanel slip_panel;
    private javax.swing.JLabel sosco_label;
    private javax.swing.JLabel system_label;
    private javax.swing.JTextField txt;
    private javax.swing.JLabel txt_allowance;
    private javax.swing.JLabel txt_basic;
    private javax.swing.JLabel txt_deduction;
    private javax.swing.JLabel txt_eis;
    private javax.swing.JLabel txt_epf;
    private javax.swing.JLabel txt_gross;
    private javax.swing.JLabel txt_ic;
    private javax.swing.JLabel txt_id;
    private javax.swing.JLabel txt_lhdn;
    private javax.swing.JComboBox<String> txt_month;
    private javax.swing.JLabel txt_name;
    private javax.swing.JLabel txt_net;
    private javax.swing.JLabel txt_position;
    private javax.swing.JLabel txt_salary;
    private javax.swing.JLabel txt_sosco;
    // End of variables declaration//GEN-END:variables

    
}
